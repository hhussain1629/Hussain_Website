@model Hussain___Website.Models.Post

@{
    ViewBag.Title = "Create";
}

<div class="wrapper">
    <!-- main navigation -->
    @*<nav class="navbar navbar-default navbar-fixed-top" id="main-nav" role="navigation">
        <div class="container">
            <!-- brand and toggle -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".main-nav-collapse">
                    <span class="sr-only">Toggle Navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
            <!-- navigation links -->
            <div class="collapse navbar-collapse main-nav-collapse">
                <ul class="nav navbar-nav">
                    <li><a href="~/Home/Index/#header">HOME</a></li>
                    <li><a href="~/Home/Index/#about-me">ABOUT</a></li>
                    <li><a href="~/Home/Index/#resume">RESUME</a></li>
                    <li><a href="~/Home/Index/#projects">PORTFOLIO</a></li>
                    <li><a href="~/Home/Index/#js-exercises">JS EXERCISES</a></li>
                    <li><a href="~/Home/Index/#contacts">CONTACT</a></li>
                    <li><a href="~/Posts/Index">BLOG</a></li>
                    <li><a href="#other">OTHER</a></li>
                </ul>
            </div>
        </div>
    </nav>*@
</div>
<h2>Create</h2>


@using (Html.BeginForm("Create", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, 7, 0, new { @class = "form-control", @id = "mytextarea" })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                @*@Model.Slug = Model.Body(0, 20)+"...";*@
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.MediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MediaURL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MediaURL, "", new { @class = "text-danger" })
            </div>
        </div>*@



        @Html.HiddenFor(model => model.MediaURL)
        <div class="form-group">
            @Html.Label("Image.Upload", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="fileUpload" name="fileUpload" class="btn btn-primary" />
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script type="text/javascript">
        tinymce.init({
            selector: "#mytextarea",
            plugin: "image",
            elementpath: false
        });
    </script>
}


